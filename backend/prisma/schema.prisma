// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://chatuser:chatpass@localhost:5432/chatdb"
}

enum MessageStatus {
  ACTIVE
  EDITED
  DELETED
}

enum RoomRole {
  ADMIN
  MEMBER
}

model user {
  id       String   @id @default(dbgenerated("gen_random_uuid()"))
  username String   @unique
  password String
  messages message[]
  unread_messages unread_message[]
  room_memberships room_member[]
  created_rooms room[] @relation("RoomCreator")
}

model room {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  name      String
  created_at DateTime @default(now())
  messages  message[]
  unread_messages unread_message[]
  members   room_member[]
  creator   user     @relation("RoomCreator", fields: [creator_id], references: [id])
  creator_id String
}

model message {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  content   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user      user     @relation(fields: [user_id], references: [id])
  user_id    String
  room      room     @relation(fields: [room_id], references: [id])
  room_id    String
  unread_messages unread_message[]
  files     message_file[]
  status    MessageStatus @default(ACTIVE)
}

model message_file {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  file_name  String
  file_url   String
  file_type  String
  file_size  Int
  message   message  @relation(fields: [message_id], references: [id], onDelete: Cascade)
  message_id String
  created_at DateTime @default(now())
}

model unread_message {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  message   message  @relation(fields: [message_id], references: [id])
  message_id String
  user      user     @relation(fields: [user_id], references: [id])
  user_id    String
  room      room     @relation(fields: [room_id], references: [id])
  room_id    String
  created_at DateTime @default(now())

  @@unique([message_id, user_id])
}

model room_member {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  user      user     @relation(fields: [user_id], references: [id])
  user_id    String
  room      room     @relation(fields: [room_id], references: [id])
  room_id    String
  role      RoomRole @default(MEMBER)
  joined_at  DateTime @default(now())

  @@unique([user_id, room_id])
}
